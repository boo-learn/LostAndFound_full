"""Create 'Uncategorized' category and assign to lost items

Revision ID: b146ad0fb785
Revises: 583ede9859a1
Create Date: 2025-03-11 04:09:19.755231

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = 'b146ad0fb785'
down_revision: Union[str, None] = '583ede9859a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'categories',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )

    # Создание категории "Не указано"
    categories_table = sa.table(
        'categories',
        sa.column('id', sa.Integer),
        sa.column('name', sa.String),
        sa.column('description', sa.String)
    )

    op.bulk_insert(
        categories_table,
        [
            {'name': 'Не указано', 'description': 'Категория для неуказанных предметов'}
        ]
    )

    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=True)
    op.add_column('lost_items', sa.Column('category_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'lost_items', 'categories', ['category_id'], ['id'])

    # Получение ID категории "Не указано"
    connection = op.get_bind()
    uncategorized_category_id = connection.execute(
        sa.text("SELECT id FROM categories WHERE name = 'Не указано'")).scalar()

    # Обновление lost_items
    lost_items_table = sa.table(
        'lost_items',
        sa.column('id', sa.Integer),
        sa.column('category_id', sa.Integer)
    )

    op.execute(
        lost_items_table.update().where(
            lost_items_table.c.category_id == None
        ).values(category_id=uncategorized_category_id)
    )

    # Изменение столбца category_id на nullable=False
    op.alter_column('lost_items', 'category_id', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint(None, 'lost_items', type_='foreignkey')
    op.drop_column('lost_items', 'category_id')
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
